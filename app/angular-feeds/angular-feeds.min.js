/**
 * angular-feeds - v0.0.1
 */
"use strict";angular.module("feeds-directives",[]).directive("feed",["feedService","$compile","$templateCache","$http",function(e,t,n,r){return{restrict:"E",scope:{summary:"=summary"},controller:["$scope","$element","$attrs","$timeout",function(a,i,s,l){function o(e,n){if(i.append(t(e)(a)),n)for(var r=0;r<n.length;r++)a.feeds.push(n[r])}a.$watch("finishedLoading",function(e){s.postRender&&e&&l(function(){new Function("element",s.postRender+"(element);")(i)},0)}),a.feeds=[];var c=n.get("feed-spinner.html");i.append(t(c)(a)),e.getFeeds(s.url,s.count).then(function(e){s.templateUrl?r.get(s.templateUrl,{cache:n}).success(function(t){o(t,e)}):o(n.get("feed-list.html"),e)},function(e){console.error("Error loading feed ",e),a.error=e,o(n.get("feed-list.html"))})["finally"](function(){i.find(".spinner").slideUp(),a.$evalAsync("finishedLoading = true")})}]}}]),angular.module("feeds",["feeds-services","feeds-directives"]),angular.module("feeds-services",[]).factory("feedService",["$q","$sce","feedCache",function(e,t,n){function r(e){return e.title=t.trustAsHtml(e.title),e.contentSnippet=t.trustAsHtml(e.contentSnippet),e.content=t.trustAsHtml(e.content),e.publishedDate=new Date(e.publishedDate).getTime(),e}var a=function(t,a){var i=e.defer();if(n.hasCache(t))return i.resolve(r(n.get(t)));var s=new google.feeds.Feed(t);return a&&(s.includeHistoricalEntries(),s.setNumEntries(a)),s.load(function(e){if(e.error)i.reject(e.error);else{n.set(e.feed.entries);for(var t=0;t<e.feed.entries.length;t++)r(e.feed.entries[t]);i.resolve(e.feed.entries)}}),i.promise};return{getFeeds:a}}]).factory("feedCache",function(){function e(){return"CACHE_TIMES"in localStorage?angular.fromJson(localStorage.CACHE_TIMES):{}}function t(t){var r=e();return t in r&&t in localStorage&&(new Date).getTime()-r[t]<n}var n=3e5;return{set:function(t,n){localStorage[t]=angular.toJson(n);var r=e();r[t]=(new Date).getTime(),localStorage.CACHE_TIMES=angular.toJson(r)},get:function(e){return t(e)?angular.fromJson(localStorage[e]):null},hasCache:t}}),angular.module("feeds").directive("shapeDiagramm",["$timeout",function(e){return{link:function(t,n,r){e(function(){var e=angular.element(n).text().toLowerCase(),t={labels:[],series:[]};!function a(e){var n=e[0];if(n){var r=e.split(n).length-1;t.labels.push(n.toUpperCase()),t.series.push(r),a(e.replace(new RegExp(n,"gi"),""))}}(e.replace(/[^a-z]/gi,""));var r={labelInterpolationFnc:function(e){return e[0]}};new Chartist.Pie(angular.element(n).parent().find(".ct-chart")[0],t,r)})}}}]).run(["$templateCache",function(e){e.put("feed-list.html",'<div>\n    <div ng-show="error" class="alert alert-danger">\n        <h5 class="text-center">There was an error retrieving feeds. Please try again later.</h5>\n    </div>\n\n    <ul class="media-list">\n        <li ng-repeat="feed in feeds | orderBy:publishedDate:reverse" class="media">\n            <div class="media-body">\n                <h4 class="media-heading"><a target="_new" href="{{feed.link}}" ng-bind-html="feed.title"></a></h4>\n                <p shape-diagramm ng-bind-html="!summary ? feed.content : feed.contentSnippet"></p>\n                <div     class="ct-chart ct-perfect-fourth"></div>\n            </div>\n            <hr ng-if="!$last"/>\n        </li>\n    </ul>\n</div>')}]);